ARM GAS  /tmp/ccuH6eHm.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"main.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.rodata.HAL_UART_RxCpltCallback.str1.4,"aMS",%progbits,1
  16              		.align	2
  17              	.LC0:
  18 0000 0A00     		.ascii	"\012\000"
  19              		.section	.text.HAL_UART_RxCpltCallback,"ax",%progbits
  20              		.align	1
  21              		.global	HAL_UART_RxCpltCallback
  22              		.arch armv7-m
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  26              		.fpu softvfp
  28              	HAL_UART_RxCpltCallback:
  29              	.LVL0:
  30              	.LFB67:
  31              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * <h2><center>&copy; Copyright (c) 2021 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.</center></h2>
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Core/Src/main.c ****   * the "License"; You may not use this file except in compliance with the
  14:Core/Src/main.c ****   * License. You may obtain a copy of the License at:
  15:Core/Src/main.c ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Core/Src/main.c ****   *
  17:Core/Src/main.c ****   ******************************************************************************
  18:Core/Src/main.c ****   */
  19:Core/Src/main.c **** /* USER CODE END Header */
  20:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/main.c **** #include "main.h"
  22:Core/Src/main.c **** #include "dma.h"
  23:Core/Src/main.c **** #include "usart.h"
  24:Core/Src/main.c **** #include "gpio.h"
  25:Core/Src/main.c **** #include <stdlib.h>
  26:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  27:Core/Src/main.c **** /* USER CODE BEGIN Includes */
ARM GAS  /tmp/ccuH6eHm.s 			page 2


  28:Core/Src/main.c **** 
  29:Core/Src/main.c **** /* USER CODE END Includes */
  30:Core/Src/main.c **** 
  31:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  32:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  33:Core/Src/main.c **** 
  34:Core/Src/main.c **** /* USER CODE END PTD */
  35:Core/Src/main.c **** 
  36:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  37:Core/Src/main.c **** /* USER CODE BEGIN PD */
  38:Core/Src/main.c **** /* USER CODE END PD */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  41:Core/Src/main.c **** /* USER CODE BEGIN PM */
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** /* USER CODE END PM */
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  46:Core/Src/main.c **** 
  47:Core/Src/main.c **** /* USER CODE BEGIN PV */
  48:Core/Src/main.c **** uint8_t u2_RX_Buf[MAX_LEN];
  49:Core/Src/main.c **** uint8_t u2_RX_ReceiveBit;
  50:Core/Src/main.c **** int rx_len = 0;
  51:Core/Src/main.c **** /* USER CODE END PV */
  52:Core/Src/main.c **** 
  53:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  54:Core/Src/main.c **** void SystemClock_Config(void);
  55:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  56:Core/Src/main.c **** 
  57:Core/Src/main.c **** /* USER CODE END PFP */
  58:Core/Src/main.c **** 
  59:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  60:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  61:Core/Src/main.c **** 
  62:Core/Src/main.c **** /* USER CODE END 0 */
  63:Core/Src/main.c **** 
  64:Core/Src/main.c **** /**
  65:Core/Src/main.c ****   * @brief  The application entry point.
  66:Core/Src/main.c ****   * @retval int
  67:Core/Src/main.c ****   */
  68:Core/Src/main.c **** int main(void)
  69:Core/Src/main.c **** {
  70:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  71:Core/Src/main.c **** 
  72:Core/Src/main.c ****   /* USER CODE END 1 */
  73:Core/Src/main.c **** 
  74:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  75:Core/Src/main.c **** 
  76:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  77:Core/Src/main.c ****   HAL_Init();
  78:Core/Src/main.c **** 
  79:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  80:Core/Src/main.c **** 
  81:Core/Src/main.c ****   /* USER CODE END Init */
  82:Core/Src/main.c **** 
  83:Core/Src/main.c ****   /* Configure the system clock */
  84:Core/Src/main.c ****   SystemClock_Config();
ARM GAS  /tmp/ccuH6eHm.s 			page 3


  85:Core/Src/main.c **** 
  86:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  87:Core/Src/main.c **** 
  88:Core/Src/main.c ****   /* USER CODE END SysInit */
  89:Core/Src/main.c **** 
  90:Core/Src/main.c ****   /* Initialize all configured peripherals */
  91:Core/Src/main.c ****   MX_GPIO_Init();
  92:Core/Src/main.c ****   MX_DMA_Init();
  93:Core/Src/main.c ****   MX_USART1_UART_Init();
  94:Core/Src/main.c ****   MX_USART2_UART_Init();
  95:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
  96:Core/Src/main.c ****   HAL_UART_Receive_DMA(&huart2, u2_RX_Buf, RX_BUF_LEN);
  97:Core/Src/main.c ****   /* USER CODE END 2 */
  98:Core/Src/main.c **** 
  99:Core/Src/main.c ****   /* Infinite loop */
 100:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 101:Core/Src/main.c ****   while (1)
 102:Core/Src/main.c ****   {
 103:Core/Src/main.c ****     /* USER CODE END WHILE */
 104:Core/Src/main.c ****     int x=rand()%1000000;
 105:Core/Src/main.c ****     u1_printf("%d\n",x);
 106:Core/Src/main.c ****     u2_printf("%d\n",x);
 107:Core/Src/main.c ****     HAL_Delay(3000);
 108:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 109:Core/Src/main.c ****   }
 110:Core/Src/main.c ****   /* USER CODE END 3 */
 111:Core/Src/main.c **** }
 112:Core/Src/main.c **** 
 113:Core/Src/main.c **** /**
 114:Core/Src/main.c ****   * @brief System Clock Configuration
 115:Core/Src/main.c ****   * @retval None
 116:Core/Src/main.c ****   */
 117:Core/Src/main.c **** void SystemClock_Config(void)
 118:Core/Src/main.c **** {
 119:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 120:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 121:Core/Src/main.c **** 
 122:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 123:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 124:Core/Src/main.c ****   */
 125:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 126:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 127:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 128:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 129:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 130:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 131:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 132:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 133:Core/Src/main.c ****   {
 134:Core/Src/main.c ****     Error_Handler();
 135:Core/Src/main.c ****   }
 136:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 137:Core/Src/main.c ****   */
 138:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 139:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 140:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 141:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
ARM GAS  /tmp/ccuH6eHm.s 			page 4


 142:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 143:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 144:Core/Src/main.c **** 
 145:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 146:Core/Src/main.c ****   {
 147:Core/Src/main.c ****     Error_Handler();
 148:Core/Src/main.c ****   }
 149:Core/Src/main.c **** }
 150:Core/Src/main.c **** 
 151:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 152:Core/Src/main.c **** void HAL_UART_RxCpltCallback(UART_HandleTypeDef* huart){
  32              		.loc 1 152 56 view -0
  33              		.cfi_startproc
  34              		@ args = 0, pretend = 0, frame = 0
  35              		@ frame_needed = 0, uses_anonymous_args = 0
  36              		.loc 1 152 56 is_stmt 0 view .LVU1
  37 0000 10B5     		push	{r4, lr}
  38              	.LCFI0:
  39              		.cfi_def_cfa_offset 8
  40              		.cfi_offset 4, -8
  41              		.cfi_offset 14, -4
 153:Core/Src/main.c ****   HAL_UART_Transmit(&huart1, u2_RX_Buf, RX_BUF_LEN, HAL_MAX_DELAY);
  42              		.loc 1 153 3 is_stmt 1 view .LVU2
  43 0002 084C     		ldr	r4, .L3
  44 0004 4FF0FF33 		mov	r3, #-1
  45 0008 0622     		movs	r2, #6
  46 000a 2146     		mov	r1, r4
  47 000c 0648     		ldr	r0, .L3+4
  48              	.LVL1:
  49              		.loc 1 153 3 is_stmt 0 view .LVU3
  50 000e FFF7FEFF 		bl	HAL_UART_Transmit
  51              	.LVL2:
 154:Core/Src/main.c ****   u1_printf("\n"); 
  52              		.loc 1 154 3 is_stmt 1 view .LVU4
  53 0012 0648     		ldr	r0, .L3+8
  54 0014 FFF7FEFF 		bl	u1_printf
  55              	.LVL3:
 155:Core/Src/main.c ****   HAL_UART_Receive_DMA(&huart2, u2_RX_Buf, RX_BUF_LEN); 
  56              		.loc 1 155 3 view .LVU5
  57 0018 0622     		movs	r2, #6
  58 001a 2146     		mov	r1, r4
  59 001c 0448     		ldr	r0, .L3+12
  60 001e FFF7FEFF 		bl	HAL_UART_Receive_DMA
  61              	.LVL4:
 156:Core/Src/main.c **** }
  62              		.loc 1 156 1 is_stmt 0 view .LVU6
  63 0022 10BD     		pop	{r4, pc}
  64              	.L4:
  65              		.align	2
  66              	.L3:
  67 0024 00000000 		.word	u2_RX_Buf
  68 0028 00000000 		.word	huart1
  69 002c 00000000 		.word	.LC0
  70 0030 00000000 		.word	huart2
  71              		.cfi_endproc
  72              	.LFE67:
  74              		.section	.text.Error_Handler,"ax",%progbits
ARM GAS  /tmp/ccuH6eHm.s 			page 5


  75              		.align	1
  76              		.global	Error_Handler
  77              		.syntax unified
  78              		.thumb
  79              		.thumb_func
  80              		.fpu softvfp
  82              	Error_Handler:
  83              	.LFB68:
 157:Core/Src/main.c **** /* USER CODE END 4 */
 158:Core/Src/main.c **** 
 159:Core/Src/main.c **** /**
 160:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 161:Core/Src/main.c ****   * @retval None
 162:Core/Src/main.c ****   */
 163:Core/Src/main.c **** void Error_Handler(void)
 164:Core/Src/main.c **** {
  84              		.loc 1 164 1 is_stmt 1 view -0
  85              		.cfi_startproc
  86              		@ Volatile: function does not return.
  87              		@ args = 0, pretend = 0, frame = 0
  88              		@ frame_needed = 0, uses_anonymous_args = 0
  89              		@ link register save eliminated.
 165:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 166:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 167:Core/Src/main.c ****   __disable_irq();
  90              		.loc 1 167 3 view .LVU8
  91              	.LBB4:
  92              	.LBI4:
  93              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
ARM GAS  /tmp/ccuH6eHm.s 			page 6


  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  /tmp/ccuH6eHm.s 			page 7


  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
  94              		.loc 2 140 27 view .LVU9
  95              	.LBB5:
ARM GAS  /tmp/ccuH6eHm.s 			page 8


 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
  96              		.loc 2 142 3 view .LVU10
  97              		.syntax unified
  98              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
  99 0000 72B6     		cpsid i
 100              	@ 0 "" 2
 101              		.thumb
 102              		.syntax unified
 103              	.L6:
 104              	.LBE5:
 105              	.LBE4:
 168:Core/Src/main.c ****   while (1)
 106              		.loc 1 168 3 discriminator 1 view .LVU11
 169:Core/Src/main.c ****   {
 170:Core/Src/main.c ****   }
 107              		.loc 1 170 3 discriminator 1 view .LVU12
 168:Core/Src/main.c ****   while (1)
 108              		.loc 1 168 9 discriminator 1 view .LVU13
 109 0002 FEE7     		b	.L6
 110              		.cfi_endproc
 111              	.LFE68:
 113              		.section	.text.SystemClock_Config,"ax",%progbits
 114              		.align	1
 115              		.global	SystemClock_Config
 116              		.syntax unified
 117              		.thumb
 118              		.thumb_func
 119              		.fpu softvfp
 121              	SystemClock_Config:
 122              	.LFB66:
 118:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 123              		.loc 1 118 1 view -0
 124              		.cfi_startproc
 125              		@ args = 0, pretend = 0, frame = 64
 126              		@ frame_needed = 0, uses_anonymous_args = 0
 127 0000 00B5     		push	{lr}
 128              	.LCFI1:
 129              		.cfi_def_cfa_offset 4
 130              		.cfi_offset 14, -4
 131 0002 91B0     		sub	sp, sp, #68
 132              	.LCFI2:
 133              		.cfi_def_cfa_offset 72
 119:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 134              		.loc 1 119 3 view .LVU15
 119:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 135              		.loc 1 119 22 is_stmt 0 view .LVU16
 136 0004 0023     		movs	r3, #0
 137 0006 0993     		str	r3, [sp, #36]
 138 0008 0B93     		str	r3, [sp, #44]
 139 000a 0C93     		str	r3, [sp, #48]
 120:Core/Src/main.c **** 
 140              		.loc 1 120 3 is_stmt 1 view .LVU17
 120:Core/Src/main.c **** 
 141              		.loc 1 120 22 is_stmt 0 view .LVU18
 142 000c 0193     		str	r3, [sp, #4]
 143 000e 0293     		str	r3, [sp, #8]
ARM GAS  /tmp/ccuH6eHm.s 			page 9


 144 0010 0393     		str	r3, [sp, #12]
 145 0012 0493     		str	r3, [sp, #16]
 146 0014 0593     		str	r3, [sp, #20]
 125:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 147              		.loc 1 125 3 is_stmt 1 view .LVU19
 125:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 148              		.loc 1 125 36 is_stmt 0 view .LVU20
 149 0016 0121     		movs	r1, #1
 150 0018 0691     		str	r1, [sp, #24]
 126:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 151              		.loc 1 126 3 is_stmt 1 view .LVU21
 126:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 152              		.loc 1 126 30 is_stmt 0 view .LVU22
 153 001a 4FF48032 		mov	r2, #65536
 154 001e 0792     		str	r2, [sp, #28]
 127:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 155              		.loc 1 127 3 is_stmt 1 view .LVU23
 127:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 156              		.loc 1 127 36 is_stmt 0 view .LVU24
 157 0020 0893     		str	r3, [sp, #32]
 128:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 158              		.loc 1 128 3 is_stmt 1 view .LVU25
 128:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 159              		.loc 1 128 30 is_stmt 0 view .LVU26
 160 0022 0A91     		str	r1, [sp, #40]
 129:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 161              		.loc 1 129 3 is_stmt 1 view .LVU27
 129:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 162              		.loc 1 129 34 is_stmt 0 view .LVU28
 163 0024 0223     		movs	r3, #2
 164 0026 0D93     		str	r3, [sp, #52]
 130:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 165              		.loc 1 130 3 is_stmt 1 view .LVU29
 130:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 166              		.loc 1 130 35 is_stmt 0 view .LVU30
 167 0028 0E92     		str	r2, [sp, #56]
 131:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 168              		.loc 1 131 3 is_stmt 1 view .LVU31
 131:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 169              		.loc 1 131 32 is_stmt 0 view .LVU32
 170 002a 4FF4E013 		mov	r3, #1835008
 171 002e 0F93     		str	r3, [sp, #60]
 132:Core/Src/main.c ****   {
 172              		.loc 1 132 3 is_stmt 1 view .LVU33
 132:Core/Src/main.c ****   {
 173              		.loc 1 132 7 is_stmt 0 view .LVU34
 174 0030 06A8     		add	r0, sp, #24
 175 0032 FFF7FEFF 		bl	HAL_RCC_OscConfig
 176              	.LVL5:
 132:Core/Src/main.c ****   {
 177              		.loc 1 132 6 view .LVU35
 178 0036 80B9     		cbnz	r0, .L11
 138:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 179              		.loc 1 138 3 is_stmt 1 view .LVU36
 138:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 180              		.loc 1 138 31 is_stmt 0 view .LVU37
 181 0038 0F23     		movs	r3, #15
ARM GAS  /tmp/ccuH6eHm.s 			page 10


 182 003a 0193     		str	r3, [sp, #4]
 140:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 183              		.loc 1 140 3 is_stmt 1 view .LVU38
 140:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 184              		.loc 1 140 34 is_stmt 0 view .LVU39
 185 003c 0221     		movs	r1, #2
 186 003e 0291     		str	r1, [sp, #8]
 141:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 187              		.loc 1 141 3 is_stmt 1 view .LVU40
 141:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 188              		.loc 1 141 35 is_stmt 0 view .LVU41
 189 0040 0023     		movs	r3, #0
 190 0042 0393     		str	r3, [sp, #12]
 142:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 191              		.loc 1 142 3 is_stmt 1 view .LVU42
 142:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 192              		.loc 1 142 36 is_stmt 0 view .LVU43
 193 0044 4FF48062 		mov	r2, #1024
 194 0048 0492     		str	r2, [sp, #16]
 143:Core/Src/main.c **** 
 195              		.loc 1 143 3 is_stmt 1 view .LVU44
 143:Core/Src/main.c **** 
 196              		.loc 1 143 36 is_stmt 0 view .LVU45
 197 004a 0593     		str	r3, [sp, #20]
 145:Core/Src/main.c ****   {
 198              		.loc 1 145 3 is_stmt 1 view .LVU46
 145:Core/Src/main.c ****   {
 199              		.loc 1 145 7 is_stmt 0 view .LVU47
 200 004c 01A8     		add	r0, sp, #4
 201 004e FFF7FEFF 		bl	HAL_RCC_ClockConfig
 202              	.LVL6:
 145:Core/Src/main.c ****   {
 203              		.loc 1 145 6 view .LVU48
 204 0052 20B9     		cbnz	r0, .L12
 149:Core/Src/main.c **** 
 205              		.loc 1 149 1 view .LVU49
 206 0054 11B0     		add	sp, sp, #68
 207              	.LCFI3:
 208              		.cfi_remember_state
 209              		.cfi_def_cfa_offset 4
 210              		@ sp needed
 211 0056 5DF804FB 		ldr	pc, [sp], #4
 212              	.L11:
 213              	.LCFI4:
 214              		.cfi_restore_state
 134:Core/Src/main.c ****   }
 215              		.loc 1 134 5 is_stmt 1 view .LVU50
 216 005a FFF7FEFF 		bl	Error_Handler
 217              	.LVL7:
 218              	.L12:
 147:Core/Src/main.c ****   }
 219              		.loc 1 147 5 view .LVU51
 220 005e FFF7FEFF 		bl	Error_Handler
 221              	.LVL8:
 222              		.cfi_endproc
 223              	.LFE66:
 225              		.section	.rodata.main.str1.4,"aMS",%progbits,1
ARM GAS  /tmp/ccuH6eHm.s 			page 11


 226              		.align	2
 227              	.LC1:
 228 0000 25640A00 		.ascii	"%d\012\000"
 229              		.section	.text.main,"ax",%progbits
 230              		.align	1
 231              		.global	main
 232              		.syntax unified
 233              		.thumb
 234              		.thumb_func
 235              		.fpu softvfp
 237              	main:
 238              	.LFB65:
  69:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 239              		.loc 1 69 1 view -0
 240              		.cfi_startproc
 241              		@ args = 0, pretend = 0, frame = 0
 242              		@ frame_needed = 0, uses_anonymous_args = 0
 243 0000 38B5     		push	{r3, r4, r5, lr}
 244              	.LCFI5:
 245              		.cfi_def_cfa_offset 16
 246              		.cfi_offset 3, -16
 247              		.cfi_offset 4, -12
 248              		.cfi_offset 5, -8
 249              		.cfi_offset 14, -4
  77:Core/Src/main.c **** 
 250              		.loc 1 77 3 view .LVU53
 251 0002 FFF7FEFF 		bl	HAL_Init
 252              	.LVL9:
  84:Core/Src/main.c **** 
 253              		.loc 1 84 3 view .LVU54
 254 0006 FFF7FEFF 		bl	SystemClock_Config
 255              	.LVL10:
  91:Core/Src/main.c ****   MX_DMA_Init();
 256              		.loc 1 91 3 view .LVU55
 257 000a FFF7FEFF 		bl	MX_GPIO_Init
 258              	.LVL11:
  92:Core/Src/main.c ****   MX_USART1_UART_Init();
 259              		.loc 1 92 3 view .LVU56
 260 000e FFF7FEFF 		bl	MX_DMA_Init
 261              	.LVL12:
  93:Core/Src/main.c ****   MX_USART2_UART_Init();
 262              		.loc 1 93 3 view .LVU57
 263 0012 FFF7FEFF 		bl	MX_USART1_UART_Init
 264              	.LVL13:
  94:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 265              		.loc 1 94 3 view .LVU58
 266 0016 FFF7FEFF 		bl	MX_USART2_UART_Init
 267              	.LVL14:
  96:Core/Src/main.c ****   /* USER CODE END 2 */
 268              		.loc 1 96 3 view .LVU59
 269 001a 0622     		movs	r2, #6
 270 001c 0E49     		ldr	r1, .L16
 271 001e 0F48     		ldr	r0, .L16+4
 272 0020 FFF7FEFF 		bl	HAL_UART_Receive_DMA
 273              	.LVL15:
 274              	.L14:
 101:Core/Src/main.c ****   {
ARM GAS  /tmp/ccuH6eHm.s 			page 12


 275              		.loc 1 101 3 discriminator 1 view .LVU60
 276              	.LBB6:
 104:Core/Src/main.c ****     u1_printf("%d\n",x);
 277              		.loc 1 104 5 discriminator 1 view .LVU61
 104:Core/Src/main.c ****     u1_printf("%d\n",x);
 278              		.loc 1 104 11 is_stmt 0 discriminator 1 view .LVU62
 279 0024 FFF7FEFF 		bl	rand
 280              	.LVL16:
 104:Core/Src/main.c ****     u1_printf("%d\n",x);
 281              		.loc 1 104 9 discriminator 1 view .LVU63
 282 0028 0D4B     		ldr	r3, .L16+8
 283 002a 83FB0023 		smull	r2, r3, r3, r0
 284 002e C417     		asrs	r4, r0, #31
 285 0030 C4EBA344 		rsb	r4, r4, r3, asr #18
 286 0034 0B4B     		ldr	r3, .L16+12
 287 0036 03FB1404 		mls	r4, r3, r4, r0
 288              	.LVL17:
 105:Core/Src/main.c ****     u2_printf("%d\n",x);
 289              		.loc 1 105 5 is_stmt 1 discriminator 1 view .LVU64
 290 003a 0B4D     		ldr	r5, .L16+16
 291 003c 2146     		mov	r1, r4
 292 003e 2846     		mov	r0, r5
 293 0040 FFF7FEFF 		bl	u1_printf
 294              	.LVL18:
 106:Core/Src/main.c ****     HAL_Delay(3000);
 295              		.loc 1 106 5 discriminator 1 view .LVU65
 296 0044 2146     		mov	r1, r4
 297 0046 2846     		mov	r0, r5
 298 0048 FFF7FEFF 		bl	u2_printf
 299              	.LVL19:
 107:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 300              		.loc 1 107 5 discriminator 1 view .LVU66
 301 004c 40F6B830 		movw	r0, #3000
 302 0050 FFF7FEFF 		bl	HAL_Delay
 303              	.LVL20:
 304              	.LBE6:
 101:Core/Src/main.c ****   {
 305              		.loc 1 101 9 discriminator 1 view .LVU67
 306 0054 E6E7     		b	.L14
 307              	.L17:
 308 0056 00BF     		.align	2
 309              	.L16:
 310 0058 00000000 		.word	u2_RX_Buf
 311 005c 00000000 		.word	huart2
 312 0060 83DE1B43 		.word	1125899907
 313 0064 40420F00 		.word	1000000
 314 0068 00000000 		.word	.LC1
 315              		.cfi_endproc
 316              	.LFE65:
 318              		.global	rx_len
 319              		.comm	u2_RX_ReceiveBit,1,1
 320              		.comm	u2_RX_Buf,16,4
 321              		.section	.bss.rx_len,"aw",%nobits
 322              		.align	2
 325              	rx_len:
 326 0000 00000000 		.space	4
 327              		.text
ARM GAS  /tmp/ccuH6eHm.s 			page 13


 328              	.Letext0:
 329              		.file 3 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 330              		.file 4 "Drivers/CMSIS/Include/core_cm3.h"
 331              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 332              		.file 6 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xe.h"
 333              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 334              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 335              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 336              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 337              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_uart.h"
 338              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 339              		.file 13 "Core/Inc/main.h"
 340              		.file 14 "Core/Inc/usart.h"
 341              		.file 15 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stddef.h"
 342              		.file 16 "/usr/include/newlib/sys/_types.h"
 343              		.file 17 "/usr/include/newlib/sys/reent.h"
 344              		.file 18 "/usr/include/newlib/sys/lock.h"
 345              		.file 19 "/usr/include/newlib/stdlib.h"
 346              		.file 20 "Core/Inc/gpio.h"
 347              		.file 21 "Core/Inc/dma.h"
ARM GAS  /tmp/ccuH6eHm.s 			page 14


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccuH6eHm.s:16     .rodata.HAL_UART_RxCpltCallback.str1.4:0000000000000000 $d
     /tmp/ccuH6eHm.s:20     .text.HAL_UART_RxCpltCallback:0000000000000000 $t
     /tmp/ccuH6eHm.s:28     .text.HAL_UART_RxCpltCallback:0000000000000000 HAL_UART_RxCpltCallback
     /tmp/ccuH6eHm.s:67     .text.HAL_UART_RxCpltCallback:0000000000000024 $d
                            *COM*:0000000000000010 u2_RX_Buf
     /tmp/ccuH6eHm.s:75     .text.Error_Handler:0000000000000000 $t
     /tmp/ccuH6eHm.s:82     .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/ccuH6eHm.s:114    .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccuH6eHm.s:121    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccuH6eHm.s:226    .rodata.main.str1.4:0000000000000000 $d
     /tmp/ccuH6eHm.s:230    .text.main:0000000000000000 $t
     /tmp/ccuH6eHm.s:237    .text.main:0000000000000000 main
     /tmp/ccuH6eHm.s:310    .text.main:0000000000000058 $d
     /tmp/ccuH6eHm.s:325    .bss.rx_len:0000000000000000 rx_len
                            *COM*:0000000000000001 u2_RX_ReceiveBit
     /tmp/ccuH6eHm.s:322    .bss.rx_len:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_UART_Transmit
u1_printf
HAL_UART_Receive_DMA
huart1
huart2
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
MX_GPIO_Init
MX_DMA_Init
MX_USART1_UART_Init
MX_USART2_UART_Init
rand
u2_printf
HAL_Delay
